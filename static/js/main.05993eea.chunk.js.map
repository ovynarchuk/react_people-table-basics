{"version":3,"sources":["components/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PeopleLink.tsx","components/PeoplePage.tsx","components/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","personName","to","slug","classNames","sex","replace","name","PeoplePage","useState","loading","setLoading","people","setPeople","error","setError","useParams","useEffect","catch","finally","preparedPeople","map","user","newUser","mother","find","motherName","father","fatherName","length","born","died","NotFoundPage","App","getLinkClass","isActive","role","path","index","element","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.05993eea.chunk.js","sourcesContent":["export const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport React from 'react';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person | undefined,\n  personName: string | null,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person, personName }) => (\n  person ? (\n    <Link\n      to={`../${person.slug}`}\n      className={classNames({\n        'has-text-danger': person.sex === 'f',\n      })}\n      replace\n    >\n      {person.name}\n    </Link>\n  ) : (\n    <>\n      {personName || '-'}\n    </>\n  )\n);\n","import { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { useEffect, useState } from 'react';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { Loader } from './Loader';\nimport { PersonLink } from './PeopleLink';\n\nexport const PeoplePage: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const [people, setPeople] = useState<Person[]>([]);\n  const [error, setError] = useState(false);\n\n  const { slug } = useParams();\n\n  useEffect(() => {\n    setLoading(true);\n\n    getPeople()\n      .then(setPeople)\n      .catch(() => {\n        setError(true);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  const preparedPeople = people.map((user) => {\n    const newUser = { ...user };\n\n    newUser.mother = people.find((person) => person.name === user.motherName);\n    newUser.father = people.find((person) => person.name === user.fatherName);\n\n    return newUser;\n  });\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {loading ? (\n            <Loader />\n          ) : (\n            <>\n              {people.length > 0 && error === false && (\n                <table\n                  data-cy=\"peopleTable\"\n                  // eslint-disable-next-line max-len\n                  className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n                >\n                  <thead>\n                    <tr>\n                      <th>Name</th>\n                      <th>Sex</th>\n                      <th>Born</th>\n                      <th>Died</th>\n                      <th>Mother</th>\n                      <th>Father</th>\n                    </tr>\n                  </thead>\n\n                  <tbody>\n                    {preparedPeople.map(person => (\n                      <tr\n                        data-cy=\"person\"\n                        className={classNames({\n                          'has-background-warning': slug === person.slug,\n                        })}\n                        // key={person.slug}\n                      >\n                        <td>\n                          <PersonLink\n                            person={person}\n                            personName={person.name}\n                          />\n                        </td>\n\n                        <td>{person.sex}</td>\n                        <td>{person.born}</td>\n                        <td>{person.died}</td>\n                        <td>\n                          <PersonLink\n                            person={person.mother}\n                            personName={person.motherName}\n                          />\n                        </td>\n                        <td>\n                          <PersonLink\n                            person={person.father}\n                            personName={person.fatherName}\n                          />\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              )}\n\n              {error && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  Something went wrong\n                </p>\n              )}\n\n              {people.length === 0 && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n\n            </>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import {\n  NavLink, Navigate, Route, Routes,\n} from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport './App.scss';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage';\n\nexport const App = () => {\n  const getLinkClass = (\n    { isActive }: { isActive: boolean },\n  ) => classNames('navbar-item', {\n    'has-background-grey-lighter': isActive,\n  });\n\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink to=\"/\" className={getLinkClass}>\n              Home\n            </NavLink>\n\n            <NavLink to=\"/people\" className={getLinkClass}>\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\">\n              <Route index element={<HomePage />} />\n              <Route path=\"people\">\n                <Route index element={<PeoplePage />} />\n                <Route path=\":slug\" element={<PeoplePage />} />\n              </Route>\n              <Route path=\"home\" element={<Navigate to=\"..\" replace />} />\n              <Route path=\"*\" element={<NotFoundPage />} />\n            </Route>\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}